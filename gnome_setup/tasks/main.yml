---

# TODO check potential speed improvement
- name: Gather package facts
  ansible.builtin.package_facts:

- name: Include requirements
  ansible.builtin.include_tasks:
    file: requirements.yml

##### Package installation #####
- name: Install Gnome packages
  when: item not in ansible_facts.packages
  loop: "{{ gnome_packages[ansible_distribution] }}"
  become: true
  ansible.builtin.package:
    name: "{{ item }}"
    state: present
    update_cache: true  # updates cache in case of outdated repo entries

- name: Remove obsolete Gnome packages
  become: true
  loop: "{{ obsolete_packages[ansible_os_family] }}"
  ansible.builtin.package:
    name: "{{ item }}"
    state: absent

- name: Get Gnome version
  ansible.builtin.shell:
    cmd: "gnome-shell --version | awk '{print $3}' | cut -d'.' -f1"
  register: gnome_major_version
  changed_when: false

- name: Set default target to graphical
  become: true
  ansible.builtin.file:
    src: /usr/lib/systemd/system/graphical.target
    dest: /etc/systemd/system/default.target
    state: link
  notify: Reboot Host

- name: Update GDM configuration file
  ansible.builtin.lineinfile:
    path: "{{ gdm_config_file[ansible_distribution] }}"
    backrefs: true
    regexp: '^#WaylandEnable=false$'
    line: 'WaylandEnable=false\nDefaultSession=gnome-xorg.desktop'
    state: present
  become: true
  notify: Reboot Host

##### Package configuration #####
- name: Configure basic gnome-settings
  community.general.dconf:
    key: "{{ item.key }}"
    value: "{{ item.value }}"
  loop: "{{ gnome_base_settings[gnome_major_version.stdout] | dict2items }}"

# TODO move to dictionary and figure how how to make it work with the other values in on task
- name: Set keyboard layouts
  ansible.builtin.dconf:
    key: "/org/gnome/desktop/input-sources/sources"
    value: "[('xkb', 'de'), ('xkb', 'us')]"

##### optional #####
- name: Get installed GNOME extensions
  ansible.builtin.shell:
    cmd: "ls ~/.local/share/gnome-shell/extensions/ && ls /usr/share/gnome-shell/extensions"
  register: gnome_extensions_list
  changed_when: false
  failed_when: gnome_extensions_list.rc not in [0, 2]

- name: Install extensions
  loop: "{{ gnome_extensions }}"
  when: extension.distro[ansible_distribution] is defined and extension.distro[ansible_distribution].name not in gnome_extensions_list.stdout_lines
  ansible.builtin.include_tasks:
    file: extensions.yml
  loop_control:
    label: "{{ extension.name }}"
    loop_var: extension

- name: Remove unwanted gnome extensions
  become: true
  loop: "{{ obsolete_gnome_extensions }}"
  ansible.builtin.file:
    path: "/usr/share/gnome-shell/extensions/{{ item }}"
    state: absent

- name: Get installed GNOME extensions
  ansible.builtin.shell:
    cmd: "ls ~/.local/share/gnome-shell/extensions/ && ls /usr/share/gnome-shell/extensions"
  register: gnome_extensions_list
  changed_when: false

- name: Enable installed extensions
  ansible.builtin.dconf:
    key: "/org/gnome/shell/enabled-extensions"
    value: "{{ gnome_extensions_list.stdout_lines | to_json }}"

- name: Get installed GNOME themes
  ansible.builtin.shell:
    cmd: "ls ~/.themes/ && ls .local/share/icons/ && ls /usr/share/backgrounds/"
  register: gnome_themes_list
  changed_when: false
  failed_when: gnome_themes_list.rc not in [0, 2]

- name: Install themes
  loop: "{{ gnome_themes }}"
  when: theme.name not in gnome_themes_list.stdout_lines
  ansible.builtin.include_tasks:
    file: themes.yml
  loop_control:
    label: "{{ theme.name }}"
    loop_var: theme

- name: Get users list
  ansible.builtin.getent:
    database: passwd

# INFO get user names enabled for login
- name: Extract usernames with valid shell
  loop: "{{ getent_passwd | dict2items }}"
  loop_control:
    label: "{{ item.key }}"
  when: item.value[5] in valid_shells
  ansible.builtin.set_fact:
    shell_users: "{{ shell_users | default([]) + [item.key] }}"

- name: Configure profile pictures
  loop: "{{ shell_users }}"
  loop_control:
    loop_var: shell_user
  when: profile_pictures[shell_user] is defined
  ansible.builtin.include_tasks:
    file: profile_pictures.yml

...

# INFO partly broken visible columns show no effect
# - name: Configure nautilus
#   community.general.dconf:
#     key: "{{ item.key }}"
#     value: "{{ item.value }}"
#   with_dict: "{{ nautilus_settings }}"

# - name: Configure gedit
#   community.general.dconf:
#     key: "{{ item.key }}"
#     value: "{{ item.value }}"
#   with_dict: "{{ text_editor_settings }}"

# - name: Add terminal profile
#   community.general.dconf:
#     key: "{{ terminal_profile_list }}"
#     value: "['{{ terminal_profile_uuid }}']"

# - name: Configure terminal profile
#   community.general.dconf:
#     key: "{{ terminal_profile_path }}{{ item.key }}"
#     value: "{{ item.value }}"
#   with_dict: "{{ terminal_profile_settings }}"

# - name: Configure terminal legacy settings
#   community.general.dconf:
#     key: "{{ item.key }}"
#     value: "{{ item.value }}"
#   with_dict: "{{ terminal_legacy_settings }}"
