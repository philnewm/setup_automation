---

# tasks file for smb

- name: Install required packages on redhat based distros
  when: ansible_distribution in rhel_based_distros
  become: true
  ansible.builtin.dnf:
    name: "{{ smb_install_dnf_packages }}"
    state: present
    update_cache: true

- name: Install required packages on debian based distros
  when: ansible_distribution in debian_based_distros
  become: true
  ansible.builtin.apt:
    name: "{{ smb_install_deb_packages }}"
    state: present
    update_cache: true
  notify: Reboot Host

- name: Add fileserver host to system/vm host
  become: true
  ansible.builtin.lineinfile:
    path: "{{ smb_hosts_file_path }}"
    line: "{{ smb_hosts_entry }}"
    state: present
    mode: "0644"

# TODO handle credential files in more safe way
- name: Write credentials
  ansible.builtin.copy:
    content: |
      username={{ smb_login }}
      password={{ smb_password }}
    dest: "{{ (smb_user_home_path, smb_credentials_file) | ansible.builtin.path_join }}"
    owner: root
    group: root
    mode: "0600"
  become: true

- name: Create mount mount_targets
  ansible.builtin.file:
    path: "/{{ (smb_mnt_point, item.mount) | ansible.builtin.path_join }}"
    state: directory
    owner: root
    group: root
    mode: "0755"
  loop: "{{ mount_targets }}"
  become: true

- name: Copy mount template to remote host
  ansible.builtin.template:
    src: mountfile.mount.j2
    dest: "{{ (smb_systemd_mount_file_path, smb_mnt_point + '-' + item.mount + smb_mount_file_ext) | ansible.builtin.path_join }}"
    mode: preserve
  loop: "{{ mount_targets }}"
  become: true

- name: Copy automount template to remote host
  ansible.builtin.template:
    src: mountfile.automount.j2
    dest: "{{ (smb_systemd_mount_file_path, smb_mnt_point + '-' + item.mount + smb_auto_mount_file_ext) | ansible.builtin.path_join }}"
    mode: preserve
  loop: "{{ mount_targets }}"
  become: true

- name: Enable auto-mount file
  ansible.builtin.systemd_service:
    daemon_reload: true
    name: "{{ smb_mnt_point }}-{{ item.mount }}.automount"
    state: started
    enabled: true
  loop: "{{ mount_targets }}"
  become: true

...
