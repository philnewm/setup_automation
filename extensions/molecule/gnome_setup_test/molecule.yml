---
dependency:
  name: galaxy    
driver:
  name: vagrant
  provider:
    name: virtualbox
    type: virtualbox
lint: |
  set -e
  yamllint
  ansible-lint
platforms:
  - name: CentosStream9
    box: centos/stream9
    box_url: https://cloud.centos.org/centos/9-stream/x86_64/images/CentOS-Stream-Vagrant-9-20230704.1.x86_64.vagrant-virtualbox.box
      # https://cloud.centos.org/centos/9-stream/x86_64/images/CentOS-Stream-Vagrant-9-20230704.1.x86_64.vagrant-libvirt.box
    memory: 2048
    cpus: 2
    interfaces:
      - auto_config: true
        network_name: private_network
        type: "static"
        ip: "192.168.56.10"
    provider_raw_config_args:
    - "customize [ 'modifyvm', :id, '--uartmode1', 'disconnected']"
    groups:
      - client
  - name: Alma9
    box: almalinux/9
    memory: 2048
    cpus: 2
    interfaces:
      - auto_config: true
        network_name: private_network
        type: "static"
        ip: "192.168.56.20"
    provider_raw_config_args:
      - "customize [ 'modifyvm', :id, '--uartmode1', 'disconnected']"  
    groups:
      - client
  - name: debian12
    box: generic/debian12
    memory: 2048
    cpus: 2
    interfaces:
      - auto_config: true
        network_name: private_network
        type: "static"
        ip: "192.168.56.30"
    provider_raw_config_args:
      - "customize [ 'modifyvm', :id, '--uartmode1', 'disconnected']"  
    groups:
      - client
provisioner:
  name: ansible
  inventory:
    host_vars:
      CentosStream9:
        ansible_user: vagrant
        ansible_password: vagrant
      Alma9:
        ansible_user: vagrant
        ansible_password: vagrant
      debian12:
        ansible_user: vagrant
        ansible_password: vagrant
    group_vars:
      all:
        ansible_timeout: 180
        debian_based_distros: ["Debian", "Ubuntu"]
        rhel_based_distros: ["RedHat", "CentOS", "AlmaLinux"]
        mount_targets:
          - { share: "documents", mount: "documents" }
          - { share: "learning", mount: "learning" }
          - { share: "library", mount: "library" }
          - { share: "ressources", mount: "ressources" }
          - { share: "usb_backup", mount: "archive" }
  config_options:
    defaults:
      gathering: smart
      fact_caching_timeout: 3600
      fact_caching: jsonfile
      fact_caching_connection: /tmp/ansible_fact_cache
      stdout_callback: debug
      callbacks_enabled: ansible.posix.profile_tasks
      vault_password_file: "$HOME/Documents/vault.pw"
    connection:
      # WARNING disable "requiretty" in hosts sudoers file on case of errors 
      pipelining: true
    env:
      ANSIBLE_FORCE_COLOR: "true"
verifier:
  name: ansible
