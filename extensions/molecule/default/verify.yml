---

- name: Verify
  hosts: client

  vars:
    dummy_file_path_mount: "/mnt/documents/test.txt"
    dummy_file_path_local: "/tmp/test.txt"

  tasks:

    - name: Get cifs package status
      when: ansible_distribution in rhel_based_distros
      become: true
      ansible.builtin.dnf:
        name: "cifs-utils"
        state: present
      check_mode: true
      register: dnf_status

    - name: Test cifs package is installed via dnf
      when: ansible_distribution in rhel_based_distros
      ansible.builtin.assert:
        that:
          - not dnf_status.changed

    - name: Get cifs package status
      when: ansible_distribution in debian_based_distros
      become: true
      ansible.builtin.apt:
        name: "cifs-utils"
        state: present
      check_mode: true
      register: apt_status

    - name: Test cifs package is installed via apt
      when: ansible_distribution in debian_based_distros
      ansible.builtin.assert:
        that:
          - not apt_status.changed

    - name: Get credentials file stats
      ansible.builtin.stat:
        path: "{{ ansible_env.HOME }}/.smb"
      register: cred_file_info

    - name: Test credentials file stats
      ansible.builtin.assert:
        that:
          - cred_file_info.stat.exists
          - cred_file_info.stat.gr_name == "root"
          - cred_file_info.stat.pw_name == "root"
          - cred_file_info.stat.mode == "0600"
        success_msg: "Successfully tested credential file stats"
        fail_msg: "Failed testing credential file stats"

    - name: Get mount point stats
      loop: "{{ mount_targets }}"
      ansible.builtin.stat:
        path: "/mnt/{{ item.mount }}"
      register: mnt_file_info

    # - name: Show varibale
    #   ansible.builtin.debug:
    #     var: mnt_file_info

    - name: Test mount point stats
      loop: "{{ mnt_file_info.results }}"
      ansible.builtin.assert:
        that:
          - item.stat.exists
        quiet: true

    # TODO test all mounts points exist
    # TODO test allmount points are able to mount
    # TODO test read file
    # TODO test write file
    # TODO test execute file

    - name: Crash execution
      ansible.builtin.fail:

    - name: Reboot the host and continue playbook
      ansible.builtin.reboot:
        msg: Reboot initiated by Ansible
        reboot_timeout: 60
      become: true

    - name: Copy test file to host
      ansible.builtin.copy:
        remote_src: true
        src: "{{ dummy_file_path_mount }}"
        dest: "{{ dummy_file_path_local }}"
        mode: "0600"

    - name: Gather file information
      ansible.builtin.stat:
        path: "{{ dummy_file_path_local }}"
      register: file_info

    - name: Assert file exists
      ansible.builtin.assert:
        that:
          - "file_info.stat.exists"
        fail_msg: "File '{{ dummy_file_path_local }}' does not exist!"
        success_msg: "File '{{ dummy_file_path_local }}' got copied from server successfully!"

    - name: Remove test file
      ansible.builtin.file:
        path: "{{ dummy_file_path_local }}"
        state: absent

    # - name: Roll back changes
    #   ansible.builtin.include_role:
    #     name: smb
    #     tasks_from: main.yml
    #   vars:
    #     smb_state: absent
    #     smb_server_host_name: "fileserver"
    #     smb_server_ip: "192.168.56.200"
