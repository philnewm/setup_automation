---

- name: Reset Virtual Machine with Ansible

  hosts: dev_host

  roles:
    - reset_vm

- name: Run initial system Setup

  hosts: dev_client_fedora

  roles:
    # - initial_setup_fedora
    - environment_variables
    - reboot
    - smb
    - grub_theme

- name: Gnome Settings

  hosts: dev_client_fedora

  tasks:
    - name: Include gnome settings
      ansible.builtin.include_vars:
        file: gnome_settings.yaml

    - name: Get UI users home dir
      ansible.builtin.user:
        name: mainws
        state: present
      register: ui_user

    - name: Install pip
      ansible.builtin.package:
        name: pip
        state: present
      become: true

    - name: Install pip psutil package
      ansible.builtin.pip:
        name: psutil
        state: present
      become: true
      become_user: mainws

    - name: Configure gnome-settings
      community.general.dconf:
        key: "{{ item.key }}"
        value: "{{ item.value }}"
      with_dict: "{{ gnome_initial_settings }}"
      become: true
      become_user: mainws

    # INFO party broken visible columns show no effect
    - name: Configure nautilus
      community.general.dconf:
        key: "{{ item.key }}"
        value: "{{ item.value }}"
      with_dict: "{{ nautilus_settings }}"
      become: true
      become_user: mainws

    - name: Add terminal profile
      community.general.dconf:
        key: "{{ terminal_profile_list }}"
        value: "['{{ terminal_profile_uuid }}']"
      become: true
      become_user: mainws

    - name: Configure terminal profile
      community.general.dconf:
        key: "{{ terminal_profile_path }}{{ item.key }}"
        value: "{{ item.value }}"
      with_dict: "{{ terminal_profile_settings }}"
      become: true
      become_user: mainws

    - name: Configure terminal legacy settings
      community.general.dconf:
        key: "{{ item.key }}"
        value: "{{ item.value }}"
      with_dict: "{{ terminal_legacy_settings }}"
      become: true
      become_user: mainws

    - name: Install gnome tweaks
      ansible.builtin.package:
        name: gnome-tweaks
        state: present
      become: true

    - name: Configure gnome-tweaks
      community.general.dconf:
        key: "{{ item.key }}"
        value: "{{ item.value }}"
      with_dict: "{{ gnome_tweaks_settings }}"
      become: true
      become_user: mainws

    - name: Install gnome extensions
      ansible.builtin.package:
        name: gnome-extensions-app
        state: present
      become: true

    - name: Install gtk engine for lavanda theme
      ansible.builtin.package:
        name: gtk-murrine-engine
        state: present
      become: true

    - name: Install gettext for Tiling-Assistant
      ansible.builtin.package:
        name: gettext
        state: present
      become: true

    # TODO make extension usable without restart or relogging
    - name: Install user-themes extension
      ansible.builtin.package:
        name: gnome-shell-extension-user-theme
        state: present
      become: true

    - name: Install dash to panel
      ansible.builtin.package:
        name: gnome-shell-extension-dash-to-panel
        state: present
      become: true

    - name: Install lm_sensors
      ansible.builtin.package:
        name: lm_sensors
        state: present
      become: true

    - name: Install app-indicator
      ansible.builtin.package:
        name: gnome-shell-extension-appindicator
        state: present
      become: true

    - name: Install drive-menu
      ansible.builtin.package:
        name: gnome-shell-extension-drive-menu
        state: present
      become: true

    - name: Install no-overview
      ansible.builtin.package:
        name: gnome-shell-extension-no-overview
        state: present
      become: true

    - name: Install just-perfection
      ansible.builtin.package:
        name: gnome-shell-extension-just-perfection
        state: present
      become: true

    - name: Install freon
      ansible.builtin.package:
        name: gnome-shell-extension-freon
        state: present
      become: true

    - name: Install gpaste
      ansible.builtin.package:
        name: gnome-shell-extension-gpaste
        state: present
      become: true

    - name: Install system-monitor-extension
      ansible.builtin.package:
        name: gnome-shell-extension-system-monitor-applet
        state: present
      become: true

    # INFO needs upodate right after install and disables extension afte relog
    - name: Clone Tiling-Assistant from github
      ansible.builtin.git:
        repo: "https://github.com/Leleat/Tiling-Assistant.git"
        dest: "{{ ui_user.home }}{{ download_tmp_dir }}Tiling-Assistant/"
        single_branch: true
        version: v43
        depth: 1
      become: true
      become_user: mainws

    # TODO save default download/execution path to variable
    - name: Install Tiling-Assistant
      ansible.builtin.command: "./build.sh -i"
      args:
        chdir: "{{ ui_user.home }}{{ download_tmp_dir }}Tiling-Assistant/scripts/"
      register: install_result
      changed_when: install_result.rc == 0
      become: true
      become_user: mainws

    # TODO find a way to reload session without rebooting
    - name: Reboot the host and continue playbook
      ansible.builtin.reboot:
        msg: Reboot initiated by Ansible
        pre_reboot_delay: 5
        reboot_timeout: 300
      become: true

    - name: Wait for the host to come back online
      ansible.builtin.wait_for_connection:
        timeout: 300
      become_user: mainws

    - name: Configure gnome-extensions
      community.general.dconf:
        key: "{{ item.key }}"
        value: "{{ item.value }}"
      with_dict: "{{ gnome_extensions_settings }}"
      become: true
      become_user: mainws

    - name: Configure panel-extension
      community.general.dconf:
        key: "{{ dash_to_panel_extension_path }}{{ item.key }}"
        value: "{{ item.value }}"
      with_dict: "{{ dash_to_panel_extension_settings }}"
      become: true
      become_user: mainws

    - name: Configure monitor-extension
      community.general.dconf:
        key: "{{ monitor_extension_path }}{{ item.key }}"
        value: "{{ item.value }}"
      with_dict: "{{ system_monitor_extension_settings }}"
      become: true
      become_user: mainws

    - name: Configure Tiling-Assistant
      community.general.dconf:
        key: "{{ tiling_assistent_path }}{{ item.key }}"
        value: "{{ item.value }}"
      with_dict: "{{ tiling_assistent_settings }}"
      become: true
      become_user: mainws

    - name: Detect lm_sensors
      ansible.builtin.command: "sensors-detect --auto"
      register: install_result
      changed_when: install_result.rc == 0
      become: true

    - name: Install sassc for lavanda theme
      ansible.builtin.package:
        name: sassc
        state: present
      become: true

    - name: Clone lavanda theme from github
      ansible.builtin.git:
        repo: "https://github.com/vinceliuice/Lavanda-gtk-theme.git"
        dest: "{{ ui_user.home }}{{ download_tmp_dir }}Lavanda-gtk-theme/"
        single_branch: true
        version: main
        depth: 1
      become: true
      become_user: mainws

    # TODO save default download/execution path to variable
    - name: Install lavanda theme
      ansible.builtin.command: "sh {{ ui_user.home }}{{ download_tmp_dir }}Lavanda-gtk-theme/install.sh --icon {{ ansible_distribution | lower }}"
      register: install_result
      changed_when: install_result.rc == 0
      become: true
      become_user: mainws

    - name: Clone tela circle icon theme from github
      ansible.builtin.git:
        repo: "https://github.com/vinceliuice/Tela-circle-icon-theme.git"
        dest: "{{ ui_user.home }}{{ download_tmp_dir }}Tela-circle-icon-theme/"
        single_branch: true
        version: master
        depth: 1
      become: true
      become_user: mainws

    # TODO save default download/execution path to variable
    - name: Install tela circle icon theme
      ansible.builtin.command: "sh {{ ui_user.home }}{{ download_tmp_dir }}Tela-circle-icon-theme/install.sh -c purple"
      register: install_result
      changed_when: install_result.rc == 0
      become: true
      become_user: mainws

    - name: Clone Qogir-cursor-theme from github
      ansible.builtin.git:
        repo: "https://github.com/vinceliuice/Qogir-icon-theme.git"
        dest: "{{ ui_user.home }}{{ download_tmp_dir }}Qogir-icon-theme/"
        single_branch: true
        version: master
        depth: 1
      become: true
      become_user: mainws

    # TODO save default download/execution path to variable
    - name: Install Qogir-cursor-theme
      ansible.builtin.command: ./install.sh
      args:
        chdir: "{{ ui_user.home }}{{ download_tmp_dir }}Qogir-icon-theme/src/cursors/"
      register: install_result
      changed_when: install_result.rc == 0
      become: true
      become_user: mainws

    # TODO move usernames to vars
    - name: Copy profile pictures
      ansible.builtin.copy:
        src: "local_files/{{ item }}"
        dest: "/var/lib/AccountsService/icons/{{ item }}"
        owner: root
        group: root
        mode: '0344'
      loop:
        - mainws
        - remote_control
      become: true

    - name: Create the user configuration file
      ansible.builtin.copy:
        content: |
          [User]
          Session=
          Icon=/var/lib/AccountsService/icons/{{ item }}
          SystemAccount=false
        dest: /var/lib/AccountsService/users/{{ item }}
        owner: root
        group: root
        mode: '0344'
      loop:
        - mainws
        - remote_control
      become: true

    - name: Configure gnome themes
      community.general.dconf:
        key: "{{ item.key }}"
        value: "{{ item.value }}"
      with_dict: "{{ gnome_theme_settings }}"
      become: true
      become_user: mainws

    - name: Clone Linux_dynamic_Wallpapers from github
      ansible.builtin.git:
        repo: "https://github.com/saint-13/Linux_Dynamic_Wallpapers.git"
        dest: "{{ ui_user.home }}{{ download_tmp_dir }}Linux_dynamic_Wallpapers/"
        single_branch: true
        version: main
        depth: 1
      become: true
      become_user: mainws

    - name: Install Linux_dynamic_Wallpapers
      ansible.builtin.command: ./install.sh
      args:
        chdir: "{{ ui_user.home }}{{ download_tmp_dir }}Linux_dynamic_Wallpapers/"
      register: install_result
      changed_when: install_result.rc == 0
      become: true

    - name: Configure Wallpaper
      community.general.dconf:
        key: "{{ gnome_background_path }}{{ item.key }}"
        value: "{{ item.value }}"
      with_dict: "{{ gnome_background_settings }}"
      become: true
      become_user: mainws

    - name: Remove downloaded repositories
      ansible.builtin.file:
        path: "{{ ui_user.home }}{{ download_tmp_dir }}"
        state: absent
      become: true
      become_user: mainws

...
