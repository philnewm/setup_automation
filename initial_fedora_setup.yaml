---

- name: Reset Virtual Machine with Ansible

  hosts: dev_host

  roles:
    - reset_vm

- name: Run initial system Setup

  hosts: dev_client_fedora

  tasks:
    - name: Set max_parallel_downloads for dnf
      ansible.builtin.lineinfile:
        path: /etc/dnf/dnf.conf
        regexp: '^max_parallel_downloads='
        line: 'max_parallel_downloads=10'
        state: present
      become: true

    - name: Set fastestmirror=true in dnf.conf
      ansible.builtin.lineinfile:
        path: /etc/dnf/dnf.conf
        regexp: '^fastestmirror='
        line: 'fastestmirror=true'
        state: present
      become: true

    - name: Set fastestmirror=true in dnf.conf
      ansible.builtin.lineinfile:
        path: /etc/dnf/dnf.conf
        regexp: '^deltarpm='
        line: 'deltarpm=true'
        state: present
      become: true

    - name: Upgrade packages
      ansible.builtin.command: dnf upgrade --refresh -y
      register: command_result
      changed_when: command_result.rc == 0
      become: true

    - name: Check for package issues
      ansible.builtin.command: dnf check
      register: command_result
      changed_when: command_result.rc == 0
      become: true

    - name: Remove unused packages
      ansible.builtin.command: dnf autoremove -y
      register: command_result
      changed_when: command_result.rc == 0
      become: true

    # - name: Get firmware update devices
    #   ansible.builtin.command: fwupdmgr get-devices
    #   register: command_result
    #   changed_when: command_result.rc == 0
    #   become: true

    # - name: Refresh firmware metadata (force)
    #   ansible.builtin.command: fwupdmgr refresh --force
    #   register: command_result
    #   changed_when: command_result.rc == 0
    #   become: true

    # - name: Get firmware updates
    #   ansible.builtin.command: fwupdmgr get-updates
    #   register: command_result
    #   changed_when: command_result.rc == 0
    #   become: true

    # - name: Apply firmware updates
    #   ansible.builtin.command: fwupdmgr update -y
    #   register: command_result
    #   changed_when: command_result.rc == 0
    #   become: true

    - name: Reboot the host and continue playbook
      ansible.builtin.reboot:
        msg: Reboot initiated by Ansible
        pre_reboot_delay: 5
        reboot_timeout: 300
      become: true

    - name: Wait for the host to come back online
      ansible.builtin.wait_for_connection:
        timeout: 300
      become_user: "{{ ansible_user_id }}"

    - name: Install RPMfusion free repositories
      ansible.builtin.command: dnf install -y https://mirrors.rpmfusion.org/free/fedora/rpmfusion-free-release-{{ ansible_distribution_version }}.noarch.rpm
      args:
        creates: /etc/yum.repos.d/rpmfusion-free.repo
        removes: /etc/fedora-release
      become: true

    - name: Install RPMfusion free repositories
      ansible.builtin.command: dnf install -y https://mirrors.rpmfusion.org/nonfree/fedora/rpmfusion-nonfree-release-{{ ansible_distribution_version }}.noarch.rpm
      args:
        creates: /etc/yum.repos.d/rpmfusion-free.repo
        removes: /etc/fedora-release
      become: true

    # TODO make yum_repository work
    # - name: Enable RPM Fusion Free repository
    #   ansible.builtin.yum_repository:
    #     name: rpmfusion-free
    #     description: RPM Fusion Free for Fedora $releasever
    #     baseurl: https://mirrors.rpmfusion.org/free/fedora/releases/$releasever/Everything/$basearch/os/
    #     enabled: true
    #     gpgcheck: true
    #     repo_gpgcheck: true
    #     gpgkey: https://mirrors.rpmfusion.org/free/fedora/rpmfusion-free-release-$releasever.noarch.rpm
    #   become: true

    # TODO make yum_repository work for non-free rpm fusion
    # - name: Enable RPM Fusion Non-Free repository
    #   ansible.builtin.yum_repository:
    #     name: rpmfusion-nonfree
    #     description: RPM Fusion Non-Free for Fedora $releasever
    #     baseurl: https://mirrors.rpmfusion.org/nonfree/fedora/releases/$releasever/Everything/$basearch/os/
    #     enabled: true
    #     gpgcheck: true
    #     gpgkey: https://mirrors.rpmfusion.org/nonfree/fedora/rpmfusion-nonfree-release-$releasever.noarch.rpm
    #   become: true

    - name: Install Flatpak
      ansible.builtin.dnf:
        name: flatpak
        state: present
      become: true

    - name: Add Flathub remote
      ansible.builtin.command: flatpak remote-add --if-not-exists flathub https://flathub.org/repo/flathub.flatpakrepo
      register: command_result
      changed_when: command_result.rc == 0
      become: true

    - name: Set host name
      ansible.builtin.hostname:
        name: "{{ host_name }}"


  # roles:
  #   - smb

...
