---

- name: SMB Share

  hosts: ansible-c

  vars_files:
    - vars.yaml

  tasks:
    - name: Set user's home directory path to a variable
      ansible.builtin.set_fact:
        user_home_path: "{{ ansible_env.HOME }}"
      become: false

    - name: Install cifs
      ansible.builtin.package:
        name: cifs-utils
        state: present
      become: true
      tags:
        - install-dependencies

    - name: Add fileserver to hosts
      ansible.builtin.lineinfile:
        path: /etc/hosts
        line: "{{ hosts_entry }}"
        create: true
        mode: "0644"
      become: true
      tags:
        - add-hosts-entry

    - name: Copy credentials file
      ansible.builtin.copy:
        src: ".local/.smb"
        dest: "{{ user_home_path }}/.smb"
        mode: preserve
      become: true

    - name: Create mount target
      ansible.builtin.file:
        path: /{{ mnt_point }}/{{ item.mount }}/
        state: directory
        owner: root
        group: root
        mode: "0755"
      loop: "{{ target }}"
      become: true

    - name: Copy mount template to remote host
      ansible.builtin.template:
        src: templates/mountfile.mount.j2
        dest: /etc/systemd/system/{{ mnt_point }}-{{ item.mount }}.mount
        mode: preserve
      loop: "{{ target }}"
      become: true

    - name: Copy automount template to remote host
      ansible.builtin.template:
        src: templates/mountfile.automount.j2
        dest: /etc/systemd/system/{{ mnt_point }}-{{ item.mount }}.automount
        mode: preserve
      loop: "{{ target }}"
      become: true
      notify: Enable auto-mount file

# TODO implement secure credentials handling
# TODO add reboot after setup
# TODO add a test including file copy

  handlers:
    - name: Enable auto-mount file
      ansible.builtin.systemd:
        daemon_reload: true
        name: "{{ mnt_point }}-{{ item.mount }}.automount"
        state: started
        enabled: true
      loop: "{{ target }}"
      become: true

...
