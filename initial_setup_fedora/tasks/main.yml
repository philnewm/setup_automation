---

# tasks file for initial_setup_fedora

- name: Install required packages
  ansible.builtin.package:
    name: "{{ install_packages }}"
    state: present
  become: true

- name: Set max_parallel_downloads for dnf
  ansible.builtin.lineinfile:
    path: "{{ item.path }}"
    regexp: "{{ item.regexp }}"
    line: "{{ item.line }}"
    state: "{{ item.state }}"
  loop: "{{ dnf_options }}"
  become: true

- name: Update GDM configuration file
  ansible.builtin.lineinfile:
    path: /etc/gdm/custom.conf
    backrefs: true
    regexp: '^#WaylandEnable=false$'
    line: 'WaylandEnable=false\nDefaultSession=gnome-xorg.desktop'
    state: present
  become: true

- name: Set host name "{{ host_name }}"
  ansible.builtin.hostname:
    name: "{{ host_name }}"
  become: true

# INFO failed_when override is neccessary for "fwupdmgr get-updates"
# INFO prevents false errors but might cause silent errors
- name: Initial updates
  ansible.builtin.command: "{{ item }}"
  register: command_result
  failed_when: command_result.rc not in [0, 2]
  changed_when: command_result.rc == 0
  loop: "{{ update_commands }}"
  become: true

- name: Set system-wide environment variable
  ansible.builtin.lineinfile:
    path: /etc/environment
    line: "{{ item.key }}={{ item.value }}"
    create: true
    state: present
    mode: "0644"
  with_dict: "{{ global_env_variables }}"
  become: true

- name: Set user environment variables
  ansible.builtin.lineinfile:
    path: "{{ ansible_env.HOME }}/.bashrc"
    line: "{{ item.key }}={{ item.value }}"
    create: true
    state: present
    mode: "0644"
  with_dict: "{{ user_env_variables }}"

- name: Reboot the host and continue playbook
  ansible.builtin.reboot:
    msg: Reboot initiated by Ansible
    pre_reboot_delay: 5
    reboot_timeout: 300
  become: true

- name: Wait for the host to come back online
  ansible.builtin.wait_for_connection:
    timeout: 300
  become_user: "{{ ansible_user_id }}"

...
