---
# tasks file for nomachine_setup

- name: Update GDM configuration file
  ansible.builtin.lineinfile:
    path: /etc/gdm/custom.conf
    backrefs: true
    regexp: '^#WaylandEnable=false$'
    line: 'WaylandEnable=false\nDefaultSession=gnome-xorg.desktop'
    state: present
  register: updated
  become: true

- name: Reboot the host and continue playbook
  when: updated.changed
  ansible.builtin.reboot:
    msg: Reboot initiated by Ansible
    pre_reboot_delay: 5
    reboot_timeout: 300
  become: true

- name: Wait for the host to come back online
  ansible.builtin.wait_for_connection:
    timeout: 300
  become_user: "{{ ansible_user_id }}"

- name: Remove old installer
  ansible.builtin.file:
    path: "{{ (user_install_dir, installer_name) | ansible.builtin.path_join }}"
    state: absent

- name: "Check if nomachine is installed"
  ansible.builtin.command: rpm -q nomachine
  register: package_check
  when: ansible_facts['os_family'] == "RedHat"
  changed_when: false
  ignore_errors: true

- name: Prepare nomachine
  when: package_check.rc == 1
  block:
    - name: Create install_dir
      ansible.builtin.file:
        path: "{{ user_install_dir }}"
        state: directory
        mode: '1755'

    # TODO move installer to server
    - name: Download nomachine installer
      ansible.builtin.get_url:
        url: https://download.nomachine.com/download/8.10/Linux/nomachine_8.10.1_1_x86_64.rpm
        dest: "{{ (user_install_dir, installer_name) | ansible.builtin.path_join }}"
        mode: '0440'

    - name: Change installer permission
      ansible.builtin.file:
        path: "{{ (user_install_dir, installer_name) | ansible.builtin.path_join }}"
        mode: '0700'

    - name: Show installer path
      ansible.builtin.debug:
        msg: "{{ (user_install_dir, installer_name) | ansible.builtin.path_join }}"

  # TODO reenable gpg_check and figure out how to make it work
    - name: Install nomachine
      ansible.builtin.package:
        name: "{{ (user_install_dir, installer_name) | ansible.builtin.path_join }}"
        state: present
        disable_gpg_check: true
      become: true

- name: Ensure nx config path exists
  ansible.builtin.file:
    path: "{{ (ansible_env.HOME, config_path) | ansible.builtin.path_join }}"
    owner: "{{ ansible_env.USER }}"
    group: "{{ ansible_user_gid }}"
    mode: "0700"
    state: directory

- name: Copy basic xml file
  ansible.builtin.copy:
    src: files/player.cfg
    dest: "{{ (ansible_env.HOME, config_path, player_config_file) | ansible.builtin.path_join }}"
    mode: "0600"

- name: Generate XML
  community.general.xml:
    path: "{{ (ansible_env.HOME, config_path, player_config_file) | ansible.builtin.path_join }}"
    xpath: /NXClientSettings/group[@name='NXClient']
    pretty_print: true
    add_children:
      - option:
          key: "{{ item.key }}"
          value: "{{ item.value }}"
  with_dict: "{{ nx_client }}"

# INFO only works out-of-the-box on Xorg
- name: Start nomachine service
  ansible.builtin.command: "{{ server_exec }} --start"
  register: status
  changed_when: status.rc == 0
  become: true

# TODO rework this check since it false-fails a lot
# - name: Check if nomachine service is running
#   ansible.builtin.command: "{{ server_exec }} --status"
#   register: status
#   changed_when: false
#   failed_when: status.stdout_lines != success_state

- name: Remove installer
  ansible.builtin.file:
    path: "{{ (user_install_dir, installer_name) | ansible.builtin.path_join }}"
    state: absent



...
